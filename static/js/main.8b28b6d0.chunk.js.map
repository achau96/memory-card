{"version":3,"sources":["components/Header.js","components/Robot.js","helper/robots.js","App.js","index.js"],"names":["Header","props","className","score","highScore","Robot","onClick","robotCheck","robot","src","name","alt","robots","id","clicked","App","useState","setScore","setHighScore","robotsList","setRobots","useEffect","shuffleRobots","prevState","arr","i","length","j","Math","floor","random","shuffle","currRobot","incrementScore","map","resetScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAaeA,EAXA,SAACC,GACd,OACE,sBAAKC,UAAU,SAAf,UACE,mDACA,0CACUD,EAAME,MADhB,qBAC2CF,EAAMG,iBCExCC,EATD,SAACJ,GACb,OACE,sBAAKC,UAAU,QAAQI,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,QAA7D,UACE,qBAAKC,IAAG,+BAA0BR,EAAMO,MAAME,MAAQC,IAAI,QAC1D,8BAAMV,EAAMO,MAAME,WCiDTE,G,MArDA,CACb,CACEC,GAAI,EACJH,KAAM,MACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,SACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,QACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,SACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,UACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,QACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,SACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,UACNI,SAAS,GAEX,CACED,GAAI,EACJH,KAAM,UACNI,SAAS,GAEX,CACED,GAAI,GACJH,KAAM,UACNI,SAAS,KC8BEC,EAzEH,WACV,MAA0BC,mBAAS,GAAnC,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAAkCD,mBAAS,GAA3C,mBAAOZ,EAAP,KAAkBc,EAAlB,KACA,EAA4BF,mBAASG,GAArC,mBAAOP,EAAP,KAAeQ,EAAf,KAEAC,qBAAU,WACRC,MACC,CAACnB,IAEJ,IAUMmB,EAAgB,WACpBF,GAAU,SAACG,GAAD,OAXI,SAACC,GACf,IAAK,IAAIC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAEpB,CAACD,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFkC,KAE9BD,EAAIG,GAF0B,KAIzC,OAAOH,EAMkBO,CAAQ,YAAIR,QAGjChB,EAAa,SAACyB,IACQ,IAAtBA,EAAUlB,SACZmB,IACAb,EACER,EAAOsB,KAAI,SAAC1B,GAIV,OAHIA,EAAMK,KAAOmB,EAAUnB,KACzBL,EAAMM,SAAU,GAEXN,QAIX2B,IACAf,EACER,EAAOsB,KAAI,SAAC1B,GAEV,OADAA,EAAMM,SAAU,EACTN,QAMT2B,EAAa,WACbhC,GAASC,GACXc,EAAaf,GAEfc,EAAS,IAELgB,EAAiB,WACrBhB,GAAS,SAACM,GAAD,OAAeA,EAAY,MAGtC,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAOA,EAAOC,UAAWA,IACjC,qBAAKF,UAAU,cAAf,SACGU,EAAOsB,KAAI,SAAC1B,GACX,OACE,cAAC,EAAD,CACEA,MAAOA,EACPD,WAAYA,EACZ0B,eAAgBA,aClE9BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8b28b6d0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <div>Memory Card Game</div>\n      <div>\n        Score: {props.score} &nbsp; High Score: {props.highScore}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","const Robot = (props) => {\n  return (\n    <div className=\"robot\" onClick={() => props.robotCheck(props.robot)}>\n      <img src={`https://robohash.org/${props.robot.name}`} alt=\"new\" />\n      <div>{props.robot.name}</div>\n    </div>\n  );\n};\n\nexport default Robot;\n","const robots = [\n  {\n    id: 1,\n    name: 'Bob',\n    clicked: false,\n  },\n  {\n    id: 2,\n    name: 'Batman',\n    clicked: false,\n  },\n  {\n    id: 3,\n    name: 'Robin',\n    clicked: false,\n  },\n  {\n    id: 4,\n    name: 'Alfred',\n    clicked: false,\n  },\n  {\n    id: 5,\n    name: 'Hawkeye',\n    clicked: false,\n  },\n  {\n    id: 6,\n    name: 'Ninja',\n    clicked: false,\n  },\n  {\n    id: 7,\n    name: 'Coolio',\n    clicked: false,\n  },\n  {\n    id: 8,\n    name: 'Diamond',\n    clicked: false,\n  },\n  {\n    id: 9,\n    name: 'Lettuce',\n    clicked: false,\n  },\n  {\n    id: 10,\n    name: 'BigPops',\n    clicked: false,\n  },\n];\n\nexport default robots;\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Robot from './components/Robot';\nimport './styles.css';\nimport robotsList from './helper/robots';\n\nconst App = () => {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [robots, setRobots] = useState(robotsList);\n\n  useEffect(() => {\n    shuffleRobots();\n  }, [score]);\n  //Fisher-Yates shuffle\n  const shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  };\n\n  //cannot put in just prevState because items remain the same,\n  //remember to always create copies of arrays in react!\n  const shuffleRobots = () => {\n    setRobots((prevState) => shuffle([...prevState]));\n  };\n\n  const robotCheck = (currRobot) => {\n    if (currRobot.clicked === false) {\n      incrementScore();\n      setRobots(\n        robots.map((robot) => {\n          if (robot.id === currRobot.id) {\n            robot.clicked = true;\n          }\n          return robot;\n        })\n      );\n    } else {\n      resetScore();\n      setRobots(\n        robots.map((robot) => {\n          robot.clicked = false;\n          return robot;\n        })\n      );\n    }\n  };\n\n  const resetScore = () => {\n    if (score >= highScore) {\n      setHighScore(score);\n    }\n    setScore(0);\n  };\n  const incrementScore = () => {\n    setScore((prevState) => prevState + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header score={score} highScore={highScore} />\n      <div className=\"robotHolder\">\n        {robots.map((robot) => {\n          return (\n            <Robot\n              robot={robot}\n              robotCheck={robotCheck}\n              incrementScore={incrementScore}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}